version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: sellia-postgres
    environment:
      POSTGRES_DB: sellia_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sellia-network

  # Spring Boot Backend
  sellia-backend:
    build:
      context: ./sellia-backend
      dockerfile: Dockerfile
    container_name: sellia-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/sellia_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: toor
      JAVA_OPTS: -Xmx512m -Xms256m
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      loki:
        condition: service_started
    volumes:
      - ./sellia-backend/uploads:/app/uploads
    networks:
      - sellia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Angular Frontend
  sellia-app:
    build:
      context: ./sellia-app
      dockerfile: Dockerfile
    container_name: sellia-app
    ports:
      - "3000:80"
    depends_on:
      - sellia-backend
    networks:
      - sellia-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: sellia-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - sellia-network
    depends_on:
      - sellia-backend

  # Loki
  loki:
    image: grafana/loki:latest
    container_name: sellia-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - sellia-network

  # Node Exporter (System Metrics)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: sellia-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - sellia-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: sellia-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: ''
      GF_USERS_ALLOW_SIGN_UP: 'false'
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - sellia-network

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  loki_data:
    driver: local
  grafana_data:
    driver: local

networks:
  sellia-network:
    driver: bridge
